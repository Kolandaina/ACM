#include<bits/stdc++.h>
using namespace std;
#define int long long
#define pii pair<int,int>
#define vi vector<int>
#define vvi vector<vi>
const int mod = 1e9 + 7;
int p[4000100];
vi ans;
void ols(){
	p[0] = p[1] = 1;
	for(int i = 2; i<=4000000;i++){
		if(!p[i]){
			ans.push_back(i);
			for(int j =i;j<=4000000/i;j++)p[i*j]=1;
		}
	}
}
//int n = 0;
map<int,int>mp;
void solve(){
	int n;
	cin >> n;
//	n++;
//	cout << ans[100] << endl;
//	fopen("1.txt","w",stdout);
//	while(1){
		int tmp = n*2;
		int f = 0;
		int l=0,r=ans.size()-1;
		if(mp.count(n)){
			f=mp[n];
			for(int  i = 1;i < f;i+=2){
				cout << i << " " << f-i << endl;
			}
			for(int i = f; i<=tmp;i+=2){
				cout << i << " " << tmp+f-i << endl;
			}
			return;
		}
		for(int i = 0;ans[i]<300;i++){
			if(p[ans[i]]==0&&p[ans[i]+tmp]==0){
				f=ans[i];
				break;
			} 
		}
		if(f!=0){
			for(int  i = 1;i < f;i+=2){
				cout << i << " " << f-i << endl;
			}
			for(int i = f; i<=tmp;i+=2){
				cout << i << " " << tmp+f-i << endl;
			}
		}
		else cout<<"-1\n";	
	
}

signed main(){
	ios::sync_with_stdio(0);
	cin.tie(0),cout.tie(0);
	mp[51551]=307;
mp[54206]=349;
mp[90407]=379;
mp[97046]=379;
mp[97109]=373;
mp[116651]=307;
mp[179831]=409;
mp[203429]=349;
mp[203459]=331;
mp[206621]=337;
mp[208352]=313;
mp[219157]=317;
mp[220796]=331;
mp[220811]=331;
mp[228104]=331;
mp[230116]=311;
mp[231599]=313;
mp[233606]=331;
mp[238976]=307;
mp[242326]=347;
mp[242438]=331;
mp[255341]=307;
mp[257531]=307;
mp[266729]=373;
mp[272141]=331;
mp[280733]=331;
mp[306203]=307;
mp[307397]=307;
mp[319439]=379;
mp[319673]=331;
mp[325681]=431;
mp[327434]=313;
mp[334111]=311;
mp[338206]=359;
mp[338879]=421;
mp[345317]=367;
mp[356809]=419;
mp[368248]=347;
mp[372506]=331;
mp[374747]=313;
mp[381551]=307;
mp[387188]=397;
mp[406751]=331;
mp[406766]=331;
mp[411518]=313;
mp[423221]=307;
mp[423257]=337;
mp[425921]=307;
mp[427217]=313;
mp[430522]=317;
mp[436349]=619;
mp[438743]=331;
mp[442186]=419;
mp[450641]=331;
mp[451856]=307;
mp[473519]=313;
mp[481982]=409;
mp[484801]=317;
mp[508951]=389;
mp[511733]=367;
mp[511928]=421;
mp[520664]=373;
mp[526558]=467;
mp[526924]=353;
mp[533908]=401;
mp[533971]=311;
mp[538492]=317;
mp[538501]=419;
mp[544814]=313;
mp[548323]=311;
mp[549376]=419;
mp[551864]=313;
mp[561388]=317;
mp[569051]=307;
mp[572744]=313;
mp[581054]=373;
mp[582223]=353;
mp[586643]=307;
mp[591011]=331;
mp[597686]=307;
mp[599912]=337;
mp[606631]=311;
mp[614819]=433;
mp[616241]=349;
mp[617926]=311;
mp[632042]=367;
mp[640334]=373;
mp[647138]=307;
mp[649202]=367;
mp[667424]=439;
mp[669026]=421;
mp[672029]=331;
mp[672071]=349;
mp[678604]=353;
mp[687361]=317;
mp[692722]=383;
mp[695837]=307;
mp[702932]=349;
mp[708248]=307;
mp[715178]=331;
mp[717853]=317;
mp[724063]=317;
mp[725957]=307;
mp[726779]=313;
mp[729383]=397;
mp[729428]=307;
mp[731786]=307;
mp[733391]=349;
mp[733897]=419;
mp[742537]=359;
mp[742886]=331;
mp[749414]=379;
mp[751193]=331;
mp[757492]=503;
mp[760714]=311;
mp[763387]=347;
mp[771671]=307;
mp[773189]=331;
mp[774811]=359;
mp[776891]=439;mp[780883]=503;
mp[781283]=367;
mp[781310]=313;
mp[781316]=367;
mp[781349]=349;
mp[784282]=359;
mp[784324]=449;
mp[787841]=307;
mp[793538]=313;
mp[793570]=359;
mp[794132]=313;
mp[802331]=367;
mp[806482]=359;
mp[814888]=317;
mp[823516]=347;
mp[827786]=337;
mp[832037]=313;
mp[832066]=431;
mp[836291]=307;
mp[841766]=307;
mp[841927]=317;
mp[843446]=397;
mp[848768]=331;
mp[851894]=331;
mp[852233]=337;
mp[857491]=311;
mp[866702]=337;
mp[878681]=337;
mp[879421]=317;
mp[880181]=307;
mp[880492]=317;
mp[881036]=379;mp[882604]=359;
mp[885956]=337;
mp[890552]=349;
mp[893918]=421;
mp[894458]=307;
mp[894637]=347;
mp[894767]=439;
mp[898421]=367;
mp[901954]=311;
mp[903974]=349;
mp[908342]=379;
mp[909344]=373;
mp[910688]=331;
mp[914426]=397;
mp[919046]=331;
mp[935569]=311;
mp[936311]=307;
mp[941837]=337;
mp[941852]=307;
mp[950986]=317;
mp[955676]=487;
mp[959281]=317;
mp[959921]=331;
mp[963866]=367;
mp[967964]=421;
mp[967982]=367;
mp[974498]=313;
mp[975599]=313;
mp[979036]=347;
mp[997046]=337;
mp[997061]=307;
	int _=1;
	cin>>_;
	ols();
	while(_--) solve();
	return 0;
}
